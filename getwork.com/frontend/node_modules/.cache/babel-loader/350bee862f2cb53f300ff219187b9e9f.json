{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCreative(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    creativeEffect: {\n      transformEl: null,\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      $wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      } // set translate\n\n\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      }); // set rotates\n\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n      if (custom && data.shadow || !custom) {\n        let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0 && data.shadow) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform).css({\n        opacity: opacityString\n      });\n\n      if (data.origin) {\n        $targetEl.css('transform-origin', data.origin);\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.creativeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","map":{"version":3,"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","EffectCreative","swiper","extendParams","on","creativeEffect","transformEl","limitProgress","shadowPerProgress","progressMultiplier","perspective","prev","translate","rotate","opacity","scale","next","getTranslateValue","value","setTranslate","slides","$wrapperEl","slidesSizesGrid","params","multiplier","isCenteredSlides","centeredSlides","margin","slidesOffsetBefore","transform","i","length","$slideEl","eq","slideProgress","progress","Math","min","max","originalProgress","offset","swiperSlideOffset","t","cssMode","r","custom","isHorizontal","data","forEach","index","abs","style","zIndex","round","translateString","join","rotateString","scaleString","opacityString","shadow","$shadowEl","children","shadowOpacity","$targetEl","css","origin","setTransition","duration","$transitionElements","find","transition","allSlides","effect","overwriteParams","watchSlidesProgress","virtualTranslate"],"sources":["C:/webDevelepments/mernApp/MasterProject1/getwork.com/frontend/node_modules/swiper/modules/effect-creative/effect-creative.js"],"sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      transformEl: null,\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      $wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      } // set translate\n\n\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      }); // set rotates\n\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n      if (custom && data.shadow || !custom) {\n        let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0 && data.shadow) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform).css({\n        opacity: opacityString\n      });\n\n      if (data.origin) {\n        $targetEl.css('transform-origin', data.origin);\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.creativeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
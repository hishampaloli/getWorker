{"ast":null,"code":"import axios from \"axios\";\nimport { OTP_HELPER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, OTP_HELPER_SUCCESS, OTP_HELPER_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, CHANGE_PASSWORD_REQUEST, CHANGE_PASSWORD_SUCCESS } from \"../contants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    console.log(data);\n    localStorage.setItem(\"userInfo\", JSON.stringify(data)); // localStorage.removeItem(\"userInfo\");\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const userRegister = (name, email, password, userType) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/register\", {\n      name,\n      email,\n      password,\n      userType\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const verifyEmail = (userId, otp, userType) => async dispatch => {\n  try {\n    dispatch({\n      type: OTP_HELPER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/verify-email\", {\n      userId,\n      otp,\n      userType\n    }, config);\n    console.log(data + \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\n    dispatch({\n      type: OTP_HELPER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: OTP_HELPER_FAIL,\n      error: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  console.log(3443);\n\n  try {\n    dispatch({\n      type: USER_LOGOUT\n    });\n    localStorage.removeItem(\"userInfo\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const changePassword = (oldPass, newPass) => async dispatch => {\n  try {\n    dispatch({\n      type: CHANGE_PASSWORD_REQUEST\n    });\n    const tokenId = JSON.parse(localStorage.getItem(\"userInfo\"));\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${tokenId.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.patch(`/api/resetPassword/${tokenId._id}`, {\n      oldPass,\n      newPass\n    }, config);\n\n    if ('Incorrect Old Password!') {}\n\n    dispatch({\n      type: CHANGE_PASSWORD_SUCCESS,\n      message: ''\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","OTP_HELPER_REQUEST","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","OTP_HELPER_SUCCESS","OTP_HELPER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","console","log","localStorage","setItem","JSON","stringify","error","response","message","userRegister","name","userType","verifyEmail","userId","otp","logout","removeItem","changePassword","oldPass","newPass","tokenId","parse","getItem","Authorization","token","patch","_id"],"sources":["C:/webDevelepments/mernApp/MasterProject1/getwork.com/frontend/src/actions/UserAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  OTP_HELPER_REQUEST,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  OTP_HELPER_SUCCESS,\r\n  OTP_HELPER_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  CHANGE_PASSWORD_REQUEST,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n} from \"../contants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    console.log(data);\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    // localStorage.removeItem(\"userInfo\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userRegister =\r\n  (name, email, password, userType) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_REGISTER_REQUEST,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/register\",\r\n        { name, email, password, userType },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const verifyEmail = (userId, otp, userType) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: OTP_HELPER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/verify-email\",\r\n      { userId, otp, userType },\r\n      config\r\n    );\r\n\r\n    console.log(data + \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\r\n\r\n    dispatch({\r\n      type: OTP_HELPER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: OTP_HELPER_FAIL,\r\n      error:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  console.log(3443);\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGOUT,\r\n    });\r\n\r\n    localStorage.removeItem(\"userInfo\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const changePassword = (oldPass, newPass) => async (dispatch) => {\r\n  try {\r\n\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_REQUEST\r\n    })\r\n    const tokenId = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${tokenId.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.patch(\r\n      `/api/resetPassword/${tokenId._id}`,\r\n      { oldPass, newPass },\r\n      config\r\n    );\r\n\r\n    if ('Incorrect Old Password!') {\r\n      \r\n    }\r\n\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_SUCCESS,\r\n      message: ''\r\n    })\r\n\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
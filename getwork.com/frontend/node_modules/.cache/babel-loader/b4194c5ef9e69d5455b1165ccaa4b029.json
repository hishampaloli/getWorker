{"ast":null,"code":"export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","map":{"version":3,"names":["updateActiveIndex","newActiveIndex","swiper","translate","rtlTranslate","slidesGrid","snapGrid","params","activeIndex","previousIndex","realIndex","previousRealIndex","snapIndex","previousSnapIndex","i","length","normalizeSlideIndex","indexOf","skip","Math","min","slidesPerGroupSkip","floor","slidesPerGroup","emit","parseInt","slides","eq","attr","Object","assign","initialized","runCallbacksOnInit"],"sources":["C:/webDevelepments/mernApp/MasterProject1/getwork.com/frontend/node_modules/swiper/core/update/updateActiveIndex.js"],"sourcesContent":["export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
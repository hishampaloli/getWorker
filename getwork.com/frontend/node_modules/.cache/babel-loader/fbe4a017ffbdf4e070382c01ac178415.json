{"ast":null,"code":"export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows\n\n      swiper.slides.each(slideEl => {\n        const $slideEl = swiper.$(slideEl);\n        $slideEl.find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').remove();\n      }); // create new one\n\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","map":{"version":3,"names":["effectInit","params","effect","swiper","on","setTranslate","setTransition","overwriteParams","perspective","recreateShadows","getEffectParams","classNames","push","containerModifierClass","overwriteParamsResult","Object","assign","originalParams","_s","duration","slideShadows","slides","each","slideEl","$slideEl","$","find","remove","requireUpdateOnVirtual","length","requestAnimationFrame"],"sources":["C:/webDevelepments/mernApp/MasterProject1/getwork.com/frontend/node_modules/swiper/shared/effect-init.js"],"sourcesContent":["export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows\n\n      swiper.slides.each(slideEl => {\n        const $slideEl = swiper.$(slideEl);\n        $slideEl.find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').remove();\n      }); // create new one\n\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,MAApB,EAA4B;EACzC,MAAM;IACJC,MADI;IAEJC,MAFI;IAGJC,EAHI;IAIJC,YAJI;IAKJC,aALI;IAMJC,eANI;IAOJC,WAPI;IAQJC,eARI;IASJC;EATI,IAUFT,MAVJ;EAWAG,EAAE,CAAC,YAAD,EAAe,MAAM;IACrB,IAAID,MAAM,CAACF,MAAP,CAAcC,MAAd,KAAyBA,MAA7B,EAAqC;IACrCC,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAwB,GAAET,MAAM,CAACF,MAAP,CAAcY,sBAAuB,GAAEX,MAAO,EAAxE;;IAEA,IAAIM,WAAW,IAAIA,WAAW,EAA9B,EAAkC;MAChCL,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAwB,GAAET,MAAM,CAACF,MAAP,CAAcY,sBAAuB,IAA/D;IACD;;IAED,MAAMC,qBAAqB,GAAGP,eAAe,GAAGA,eAAe,EAAlB,GAAuB,EAApE;IACAQ,MAAM,CAACC,MAAP,CAAcb,MAAM,CAACF,MAArB,EAA6Ba,qBAA7B;IACAC,MAAM,CAACC,MAAP,CAAcb,MAAM,CAACc,cAArB,EAAqCH,qBAArC;EACD,CAXC,CAAF;EAYAV,EAAE,CAAC,cAAD,EAAiB,MAAM;IACvB,IAAID,MAAM,CAACF,MAAP,CAAcC,MAAd,KAAyBA,MAA7B,EAAqC;IACrCG,YAAY;EACb,CAHC,CAAF;EAIAD,EAAE,CAAC,eAAD,EAAkB,CAACc,EAAD,EAAKC,QAAL,KAAkB;IACpC,IAAIhB,MAAM,CAACF,MAAP,CAAcC,MAAd,KAAyBA,MAA7B,EAAqC;IACrCI,aAAa,CAACa,QAAD,CAAb;EACD,CAHC,CAAF;EAIAf,EAAE,CAAC,eAAD,EAAkB,MAAM;IACxB,IAAID,MAAM,CAACF,MAAP,CAAcC,MAAd,KAAyBA,MAA7B,EAAqC;;IAErC,IAAIO,eAAJ,EAAqB;MACnB,IAAI,CAACC,eAAD,IAAoB,CAACA,eAAe,GAAGU,YAA3C,EAAyD,OADtC,CAC8C;;MAEjEjB,MAAM,CAACkB,MAAP,CAAcC,IAAd,CAAmBC,OAAO,IAAI;QAC5B,MAAMC,QAAQ,GAAGrB,MAAM,CAACsB,CAAP,CAASF,OAAT,CAAjB;QACAC,QAAQ,CAACE,IAAT,CAAc,8GAAd,EAA8HC,MAA9H;MACD,CAHD,EAHmB,CAMf;;MAEJlB,eAAe;IAChB;EACF,CAbC,CAAF;EAcA,IAAImB,sBAAJ;EACAxB,EAAE,CAAC,eAAD,EAAkB,MAAM;IACxB,IAAID,MAAM,CAACF,MAAP,CAAcC,MAAd,KAAyBA,MAA7B,EAAqC;;IAErC,IAAI,CAACC,MAAM,CAACkB,MAAP,CAAcQ,MAAnB,EAA2B;MACzBD,sBAAsB,GAAG,IAAzB;IACD;;IAEDE,qBAAqB,CAAC,MAAM;MAC1B,IAAIF,sBAAsB,IAAIzB,MAAM,CAACkB,MAAjC,IAA2ClB,MAAM,CAACkB,MAAP,CAAcQ,MAA7D,EAAqE;QACnExB,YAAY;QACZuB,sBAAsB,GAAG,KAAzB;MACD;IACF,CALoB,CAArB;EAMD,CAbC,CAAF;AAcD"},"metadata":{},"sourceType":"module"}
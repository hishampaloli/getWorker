{"ast":null,"code":"var utils = require('./utils');\n\nfunction getDataList(response, id) {\n  dataResult = {};\n  SKIPPED = [];\n  id.forEach(id => {\n    data_id = utils.trasnformDataId(id);\n\n    if (response.data.hasOwnProperty(data_id)) {\n      dataResult[data_id] = response.data[data_id];\n    } else {\n      SKIPPED.push(data_id);\n    }\n  });\n\n  if (SKIPPED.length !== 0) {\n    dataResult.SKIPPED = SKIPPED;\n  }\n\n  return dataResult;\n}\n\nfunction processId(response, id) {\n  id_type = typeof id;\n\n  switch (id_type) {\n    case 'string':\n      data_id = utils.trasnformDataId(id);\n      return response.data.hasOwnProperty(data_id) ? response.data[data_id] : 'Not Found';\n      break;\n\n    case 'object':\n      try {\n        return getDataList(response, id);\n      } catch (err) {\n        console.log(err);\n        return 'Error';\n      }\n\n      break;\n\n    default:\n      return 'Type Error';\n      break;\n  }\n} // Find requested data from IFSC details\n\n\nexports.returnData = function (code, id) {\n  /**\n   * code : IFSC code\n   * id : Key of data requested e.g BRANCH, STATE,etc\n   */\n  return utils.callRazorpay(code).then(response => {\n    try {\n      switch (response.status) {\n        case 404:\n          return \"Not Found!\";\n          break;\n\n        case 200:\n          if (id == null) return response.data;else return processId(response, id);\n          break;\n\n        default:\n          return 'Error';\n      }\n    } catch (err) {\n      return null;\n    }\n  });\n};","map":{"version":3,"names":["utils","require","getDataList","response","id","dataResult","SKIPPED","forEach","data_id","trasnformDataId","data","hasOwnProperty","push","length","processId","id_type","err","console","log","exports","returnData","code","callRazorpay","then","status"],"sources":["C:/webDevelepments/mernApp/MasterProject1/getwork.com/node_modules/ifsc-finder/main.js"],"sourcesContent":["var utils = require('./utils');\n\nfunction getDataList(response, id) {\n    dataResult = {};\n    SKIPPED = [];\n    id.forEach(id => {\n        data_id = utils.trasnformDataId(id);\n        if (response.data.hasOwnProperty(data_id)) {\n            dataResult[data_id] = response.data[data_id];\n        } else {\n            SKIPPED.push(data_id);\n        }\n    });\n    if (SKIPPED.length !== 0) {\n        dataResult.SKIPPED = SKIPPED;\n    }\n    return dataResult;\n}\n\nfunction processId(response, id) {\n    id_type = typeof (id);\n\n    switch (id_type) {\n        case 'string':\n            data_id = utils.trasnformDataId(id);\n            return response.data.hasOwnProperty(data_id) ? response.data[data_id] : 'Not Found';\n            break;\n\n        case 'object':\n            try {\n                return getDataList(response, id);\n            } catch (err) {\n                console.log(err);\n                return 'Error'\n            }\n            break;\n\n        default:\n            return 'Type Error';\n            break;\n    }\n}\n\n// Find requested data from IFSC details\nexports.returnData = function (code, id) {\n    /**\n     * code : IFSC code\n     * id : Key of data requested e.g BRANCH, STATE,etc\n     */\n    return utils.callRazorpay(code).then((response) => {\n        try {\n            switch (response.status) {\n                case 404:\n                    return \"Not Found!\";\n                    break;\n\n                case 200:\n                    if (id == null)\n                        return response.data;\n                    else\n                        return processId(response, id);\n                    break;\n                default:\n                    return 'Error';\n            }\n        } catch (err) {\n            return null;\n        }\n    })\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,EAA/B,EAAmC;EAC/BC,UAAU,GAAG,EAAb;EACAC,OAAO,GAAG,EAAV;EACAF,EAAE,CAACG,OAAH,CAAWH,EAAE,IAAI;IACbI,OAAO,GAAGR,KAAK,CAACS,eAAN,CAAsBL,EAAtB,CAAV;;IACA,IAAID,QAAQ,CAACO,IAAT,CAAcC,cAAd,CAA6BH,OAA7B,CAAJ,EAA2C;MACvCH,UAAU,CAACG,OAAD,CAAV,GAAsBL,QAAQ,CAACO,IAAT,CAAcF,OAAd,CAAtB;IACH,CAFD,MAEO;MACHF,OAAO,CAACM,IAAR,CAAaJ,OAAb;IACH;EACJ,CAPD;;EAQA,IAAIF,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;IACtBR,UAAU,CAACC,OAAX,GAAqBA,OAArB;EACH;;EACD,OAAOD,UAAP;AACH;;AAED,SAASS,SAAT,CAAmBX,QAAnB,EAA6BC,EAA7B,EAAiC;EAC7BW,OAAO,GAAG,OAAQX,EAAlB;;EAEA,QAAQW,OAAR;IACI,KAAK,QAAL;MACIP,OAAO,GAAGR,KAAK,CAACS,eAAN,CAAsBL,EAAtB,CAAV;MACA,OAAOD,QAAQ,CAACO,IAAT,CAAcC,cAAd,CAA6BH,OAA7B,IAAwCL,QAAQ,CAACO,IAAT,CAAcF,OAAd,CAAxC,GAAiE,WAAxE;MACA;;IAEJ,KAAK,QAAL;MACI,IAAI;QACA,OAAON,WAAW,CAACC,QAAD,EAAWC,EAAX,CAAlB;MACH,CAFD,CAEE,OAAOY,GAAP,EAAY;QACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACA,OAAO,OAAP;MACH;;MACD;;IAEJ;MACI,OAAO,YAAP;MACA;EAjBR;AAmBH,C,CAED;;;AACAG,OAAO,CAACC,UAAR,GAAqB,UAAUC,IAAV,EAAgBjB,EAAhB,EAAoB;EACrC;AACJ;AACA;AACA;EACI,OAAOJ,KAAK,CAACsB,YAAN,CAAmBD,IAAnB,EAAyBE,IAAzB,CAA+BpB,QAAD,IAAc;IAC/C,IAAI;MACA,QAAQA,QAAQ,CAACqB,MAAjB;QACI,KAAK,GAAL;UACI,OAAO,YAAP;UACA;;QAEJ,KAAK,GAAL;UACI,IAAIpB,EAAE,IAAI,IAAV,EACI,OAAOD,QAAQ,CAACO,IAAhB,CADJ,KAGI,OAAOI,SAAS,CAACX,QAAD,EAAWC,EAAX,CAAhB;UACJ;;QACJ;UACI,OAAO,OAAP;MAZR;IAcH,CAfD,CAeE,OAAOY,GAAP,EAAY;MACV,OAAO,IAAP;IACH;EACJ,CAnBM,CAAP;AAoBH,CAzBD"},"metadata":{},"sourceType":"script"}
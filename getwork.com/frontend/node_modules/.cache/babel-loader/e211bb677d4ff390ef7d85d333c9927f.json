{"ast":null,"code":"export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return; // Breakpoints\n\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  } // Save locks\n\n\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper; // Disable locks on resize\n\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  } // Return locks after resize\n\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","map":{"version":3,"names":["onResize","swiper","params","el","offsetWidth","breakpoints","setBreakpoint","allowSlideNext","allowSlidePrev","snapGrid","updateSize","updateSlides","updateSlidesClasses","slidesPerView","isEnd","isBeginning","centeredSlides","slideTo","slides","length","activeIndex","autoplay","running","paused","run","watchOverflow","checkOverflow"],"sources":["C:/webDevelepments/mernApp/MasterProject1/getwork.com/frontend/node_modules/swiper/core/events/onResize.js"],"sourcesContent":["export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return; // Breakpoints\n\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  } // Save locks\n\n\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper; // Disable locks on resize\n\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  } // Return locks after resize\n\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}"],"mappings":"AAAA,eAAe,SAASA,QAAT,GAAoB;EACjC,MAAMC,MAAM,GAAG,IAAf;EACA,MAAM;IACJC,MADI;IAEJC;EAFI,IAGFF,MAHJ;EAIA,IAAIE,EAAE,IAAIA,EAAE,CAACC,WAAH,KAAmB,CAA7B,EAAgC,OANC,CAMO;;EAExC,IAAIF,MAAM,CAACG,WAAX,EAAwB;IACtBJ,MAAM,CAACK,aAAP;EACD,CAVgC,CAU/B;;;EAGF,MAAM;IACJC,cADI;IAEJC,cAFI;IAGJC;EAHI,IAIFR,MAJJ,CAbiC,CAiBrB;;EAEZA,MAAM,CAACM,cAAP,GAAwB,IAAxB;EACAN,MAAM,CAACO,cAAP,GAAwB,IAAxB;EACAP,MAAM,CAACS,UAAP;EACAT,MAAM,CAACU,YAAP;EACAV,MAAM,CAACW,mBAAP;;EAEA,IAAI,CAACV,MAAM,CAACW,aAAP,KAAyB,MAAzB,IAAmCX,MAAM,CAACW,aAAP,GAAuB,CAA3D,KAAiEZ,MAAM,CAACa,KAAxE,IAAiF,CAACb,MAAM,CAACc,WAAzF,IAAwG,CAACd,MAAM,CAACC,MAAP,CAAcc,cAA3H,EAA2I;IACzIf,MAAM,CAACgB,OAAP,CAAehB,MAAM,CAACiB,MAAP,CAAcC,MAAd,GAAuB,CAAtC,EAAyC,CAAzC,EAA4C,KAA5C,EAAmD,IAAnD;EACD,CAFD,MAEO;IACLlB,MAAM,CAACgB,OAAP,CAAehB,MAAM,CAACmB,WAAtB,EAAmC,CAAnC,EAAsC,KAAtC,EAA6C,IAA7C;EACD;;EAED,IAAInB,MAAM,CAACoB,QAAP,IAAmBpB,MAAM,CAACoB,QAAP,CAAgBC,OAAnC,IAA8CrB,MAAM,CAACoB,QAAP,CAAgBE,MAAlE,EAA0E;IACxEtB,MAAM,CAACoB,QAAP,CAAgBG,GAAhB;EACD,CAjCgC,CAiC/B;;;EAGFvB,MAAM,CAACO,cAAP,GAAwBA,cAAxB;EACAP,MAAM,CAACM,cAAP,GAAwBA,cAAxB;;EAEA,IAAIN,MAAM,CAACC,MAAP,CAAcuB,aAAd,IAA+BhB,QAAQ,KAAKR,MAAM,CAACQ,QAAvD,EAAiE;IAC/DR,MAAM,CAACyB,aAAP;EACD;AACF"},"metadata":{},"sourceType":"module"}
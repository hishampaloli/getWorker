{"ast":null,"code":"import { axiosPaymentInstance } from \"../contants/axios\";\nexport const checkout = amount => async dispatch => {\n  try {\n    const tokenId = JSON.parse(localStorage.getItem(\"userInfo\"));\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${tokenId.token}`\n      }\n    };\n    const {\n      data: {\n        key\n      }\n    } = await axiosPaymentInstance.get(\"getkey\");\n    const {\n      data\n    } = await axiosPaymentInstance.post(`/checkout`, {\n      amount\n    }, config);\n    console.log(token);\n    const options = {\n      key,\n      // Enter the Key ID generated from the Dashboard\n      amount: data === null || data === void 0 ? void 0 : data.amount,\n      // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      currency: \"INR\",\n      name: \"Get worker\",\n      description: \"Buy connects\",\n      image: \"https://example.com/your_logo\",\n      order_id: data === null || data === void 0 ? void 0 : data.id,\n      //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      callback_url: \"http://localhost:3001/api/paymentVerification\",\n      prefill: {\n        name: tokenId.name,\n        email: \"gaurav.kumar@example.com\",\n        contact: \"9999999999\"\n      },\n      notes: {\n        address: \"Razorpay Corporate Office\"\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n    console.log(data);\n    console.log(key); // dispatch({\n    //   type: MYJOBS_SUCCES,\n    //   payload: data,\n    // });\n  } catch (error) {// dispatch({\n    //   type: MYJOBS_FAIL,\n    //   error: error,\n    // });\n  }\n};","map":{"version":3,"names":["axiosPaymentInstance","checkout","amount","dispatch","tokenId","JSON","parse","localStorage","getItem","config","headers","Authorization","token","data","key","get","post","console","log","options","currency","name","description","image","order_id","id","callback_url","prefill","email","contact","notes","address","theme","color","error"],"sources":["C:/webDevelepments/mernApp/MasterProject1/getwork.com/frontend/src/actions/paymentActions.js"],"sourcesContent":["import { axiosPaymentInstance } from \"../contants/axios\";\r\n\r\nexport const checkout = (amount) => async (dispatch) => {\r\n  try {\r\n    const tokenId = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${tokenId.token}`,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { key },\r\n    } = await axiosPaymentInstance.get(\"getkey\");\r\n\r\n    const { data } = await axiosPaymentInstance.post(\r\n      `/checkout`,\r\n      { amount },\r\n      config\r\n    );\r\n\r\nconsole.log(token);\r\n    \r\n    const options = {\r\n        key, // Enter the Key ID generated from the Dashboard\r\n        amount: data?.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n        currency: \"INR\",\r\n        name: \"Get worker\",\r\n        description: \"Buy connects\",\r\n        image: \"https://example.com/your_logo\",\r\n        order_id: data?.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n        callback_url: \"http://localhost:3001/api/paymentVerification\",\r\n        prefill: {\r\n          name: tokenId.name,\r\n          email: \"gaurav.kumar@example.com\",\r\n          contact: \"9999999999\",\r\n        },\r\n        notes: {\r\n          address: \"Razorpay Corporate Office\",\r\n        },\r\n        theme: {\r\n          color: \"#3399cc\",\r\n        },\r\n      };\r\n\r\n    console.log(data);\r\n    console.log(key);\r\n\r\n    // dispatch({\r\n    //   type: MYJOBS_SUCCES,\r\n    //   payload: data,\r\n    // });\r\n  } catch (error) {\r\n    // dispatch({\r\n    //   type: MYJOBS_FAIL,\r\n    //   error: error,\r\n    // });\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,mBAArC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;EACtD,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAhB;IAEA,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEPC,aAAa,EAAG,UAASP,OAAO,CAACQ,KAAM;MAFhC;IADI,CAAf;IAOA,MAAM;MACJC,IAAI,EAAE;QAAEC;MAAF;IADF,IAEF,MAAMd,oBAAoB,CAACe,GAArB,CAAyB,QAAzB,CAFV;IAIA,MAAM;MAAEF;IAAF,IAAW,MAAMb,oBAAoB,CAACgB,IAArB,CACpB,WADoB,EAErB;MAAEd;IAAF,CAFqB,EAGrBO,MAHqB,CAAvB;IAMJQ,OAAO,CAACC,GAAR,CAAYN,KAAZ;IAEI,MAAMO,OAAO,GAAG;MACZL,GADY;MACP;MACLZ,MAAM,EAAEW,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEX,MAFF;MAEU;MACtBkB,QAAQ,EAAE,KAHE;MAIZC,IAAI,EAAE,YAJM;MAKZC,WAAW,EAAE,cALD;MAMZC,KAAK,EAAE,+BANK;MAOZC,QAAQ,EAAEX,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEY,EAPJ;MAOQ;MACpBC,YAAY,EAAE,+CARF;MASZC,OAAO,EAAE;QACPN,IAAI,EAAEjB,OAAO,CAACiB,IADP;QAEPO,KAAK,EAAE,0BAFA;QAGPC,OAAO,EAAE;MAHF,CATG;MAcZC,KAAK,EAAE;QACLC,OAAO,EAAE;MADJ,CAdK;MAiBZC,KAAK,EAAE;QACLC,KAAK,EAAE;MADF;IAjBK,CAAhB;IAsBAhB,OAAO,CAACC,GAAR,CAAYL,IAAZ;IACAI,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EA7CE,CA+CF;IACA;IACA;IACA;EACD,CAnDD,CAmDE,OAAOoB,KAAP,EAAc,CACd;IACA;IACA;IACA;EACD;AACF,CA1DM"},"metadata":{},"sourceType":"module"}